{"version":3,"file":"itee-postgresql.esm.js","sources":["../sources/TPostgreSQLDatabase.js","../sources/TPostgreSQLController.js"],"sourcesContent":["/**\n * @author [Ahmed DCHAR]{@link https://github.com/dragoneel}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\nimport { TAbstractDatabase } from 'itee-database'\nimport { isDefined }         from 'itee-validators'\nimport PostgreSQL            from 'pg-promise'\n\n//const PostgreSQLDriver = PostgreSQL( {} )\n\nclass TPostgreSQLDatabase extends TAbstractDatabase {\n\n    static formatConnectionString ( parameters ) {\n\n        let connectionString                           = ''\n        const { user, password, host, port, database } = parameters\n\n        if ( isDefined( user ) && isDefined( password ) ) {\n            connectionString = `postgres://${ user }:${ password }@${ host }:${ port }/${ database }`\n        } else {\n            connectionString = `postgres://${ host }:${ port }/${ database }`\n        }\n\n        return connectionString\n\n    }\n\n    constructor ( parameters = {} ) {\n\n\n        const _parameters = {\n            ...{\n                host:     'localhost',\n                port:     '5432',\n                database: 'postgres'\n            },\n            ...parameters,\n            ...{\n                driver: PostgreSQL( {} )( TPostgreSQLDatabase.formatConnectionString( parameters ) )\n            }\n        }\n\n        super( _parameters )\n\n        this._user     = _parameters.user\n        this._password = _parameters.password\n        this._host     = _parameters.host\n        this._port     = _parameters.port\n        this._database = _parameters.database\n\n    }\n\n    init () {\n        super.init()\n\n    }\n\n    connect () {\n\n        this.driver.one( ` SELECT 1 `, [] )\n            .then( () => {\n                this.logger.log( `PostgreSQL at postgres://${ this._host }:${ this._port }/${ this._database } is connected !` )\n            } )\n            .catch( ( error ) => {\n                this.logger.log( 'PostgreSQL - Connection error ', error )\n            } )\n\n    }\n\n    on ( /*eventName, callback*/ ) {}\n\n    close ( onCloseCallback ) {\n\n        this.driver.end()\n        onCloseCallback()\n\n    }\n\n}\n\nexport { TPostgreSQLDatabase }\n","import {\n    isNotString,\n    isNull,\n    isUndefined\n}                                  from 'itee-validators'\nimport { TAbstractDataController } from 'itee-database'\n\nclass TPostgreSQLController extends TAbstractDataController {\n\n    constructor ( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                driver:      null,\n                tableName:   '',\n                tableFields: []\n            }, ...parameters\n        }\n\n        super( _parameters )\n\n        this.tableName   = _parameters.tableName\n        this.tableFields = _parameters.tableFields\n\n    }\n\n    get tableFields () {\n\n        return this._tableFields\n\n    }\n\n    set tableFields ( value ) {\n\n        const valueName = 'Table fields'\n        const expect    = 'Expect an instance of Array of String.'\n\n        if ( isNull( value ) ) { throw new TypeError( `${valueName} cannot be null ! ${expect}` ) }\n        if ( isUndefined( value ) ) { throw new TypeError( `${valueName} cannot be undefined ! ${expect}` ) }\n\n        let fields = ''\n        for ( let fieldIndex = 0, numberOfFileds = value.length ; fieldIndex < numberOfFileds ; fieldIndex++ ) {\n            fields += `${value[ fieldIndex ]}, `\n        }\n\n        this._tableFields = fields.slice( 0, -2 )\n\n    }\n\n    get tableName () {\n        return this._tableName\n    }\n\n    set tableName ( value ) {\n\n        const valueName = 'Table name'\n        const expect    = 'Expect an instance of String.'\n\n        if ( isNull( value ) ) { throw new TypeError( `${valueName} cannot be null ! ${expect}` ) }\n        if ( isUndefined( value ) ) { throw new TypeError( `${valueName} cannot be undefined ! ${expect}` ) }\n        if ( isNotString( value ) ) { throw new TypeError( `${valueName} cannot be an instance of ${value.constructor.name} ! ${expect}` ) }\n\n        this._tableName = value\n\n    }\n\n    setTableName ( value ) {\n\n        this.tableName = value\n        return this\n\n    }\n\n    _createMany ( datas, response ) {\n        super._createOne( datas, response )\n\n        const _datas      = []\n        const _errors     = []\n        let numberOfDatas = datas.length\n        let data          = null\n        let dataKeys      = null\n        let dataValues    = null\n        let counter       = null\n        let parameters    = null\n        let values        = null\n        let query         = null\n\n        for ( let subDataKey in datas ) {\n\n            data       = datas[ subDataKey ]\n            dataKeys   = Object.keys( data )\n            dataValues = Object.values( data )\n            counter    = 0\n            parameters = '('\n            values     = '('\n            for ( let key in dataKeys ) {\n                counter++\n                parameters += `${key}, `\n                values += `$${counter}, `\n            }\n            parameters = parameters.slice( 0, -2 )\n            values     = values.slice( 0, -2 )\n            parameters += ')'\n            values += ')'\n\n            query = `INSERT INTO ${this._tableName} ${parameters} VALUES ${values}`\n\n            this._driver\n                .one( query, dataValues )\n                .then( data => {\n                    _datas.push( data )\n                } )\n                .catch( error => {\n                    _errors.push( error )\n                } )\n                .finally( () => {\n\n                    numberOfDatas--\n                    if ( numberOfDatas > 0 ) { return }\n\n                    const haveData  = ( _datas.length > 0 )\n                    const haveError = ( _errors.length > 0 )\n\n                    if ( haveData && haveError ) {\n\n                        TAbstractDataController.returnErrorAndData( _errors, _datas, response )\n\n                    } else if ( !haveData && haveError ) {\n\n                        TAbstractDataController.returnError( _errors, response )\n\n                    } else if ( haveData && !haveError ) {\n\n                        TAbstractDataController.returnData( _datas, response )\n\n                    } else if ( !haveData && !haveError ) {\n\n                        TAbstractDataController.returnData( null, response )\n\n                    }\n\n                } )\n\n        }\n\n    }\n\n    _createOne ( data, response ) {\n        super._createOne( data, response )\n\n        const dataKeys   = Object.keys( data )\n        const dataValues = Object.values( data )\n        let counter      = 0\n        let parameters   = '('\n        let values       = '('\n        for ( let key in dataKeys ) {\n            counter++\n            parameters += `${key}, `\n            values += `$${counter}, `\n        }\n        parameters = parameters.slice( 0, -2 )\n        values     = values.slice( 0, -2 )\n        parameters += ')'\n        values += ')'\n\n        let query = `INSERT INTO ${this._tableName} ${parameters} VALUES ${values}`\n\n        this._driver\n            .one( query, dataValues )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _deleteAll ( response ) {\n        super._deleteAll( response )\n\n        this._driver\n            .one( ` TRUNCATE TABLE ${this._tableName} ` )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _deleteMany ( ids, response ) {\n        super._deleteMany( ids, response )\n\n        this._driver\n            .any( ` DELETE FROM ${this._tableName} WHERE id IN ($1:list) `, [ ids ] )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _deleteOne ( id, response ) {\n        super._deleteOne( id, response )\n\n        this._driver\n            .one( ` DELETE FROM ${this._tableName} WHERE id=$1 `, [ id ] )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _deleteWhere ( query, response ) {\n        super._deleteWhere( query, response )\n\n        TAbstractDataController.returnError( 'DeleteWhere method is not implemented yet ! Sorry for the disagrement.', response )\n\n    }\n\n    _readAll ( projection, response ) {\n        super._readAll( projection, response )\n\n        this._driver\n            .any( ` SELECT ${this._tableFields} FROM ${this._tableName} ` )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _readMany ( ids, projection, response ) {\n        super._readMany( ids, projection, response )\n\n        this._driver\n            .any( ` SELECT ${this._tableFields} FROM ${this._tableName} WHERE id IN ($1:list)`, [ ids ] )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _readOne ( id, projection, response ) {\n        super._readOne( id, projection, response )\n\n        this._driver\n            .one( ` SELECT ${this._tableFields} FROM ${this._tableName} WHERE id = $1 `, [ id ] )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _readWhere ( query, projection, response ) {\n        super._readWhere( query, projection, response )\n\n        this._driver\n            .any( ` SELECT ${this._tableFields} FROM ${this._tableName} WHERE ${projection}` )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n    }\n\n    _updateAll ( update, response ) {\n        super._updateAll( update, response )\n\n        TAbstractDataController.returnError( 'UpdateAll method is not implemented yet ! Sorry for the disagrement.', response )\n\n    }\n\n    _updateMany ( ids, updates, response ) {\n        super._updateMany( ids, updates, response )\n\n        const numberOfIds     = ids.length\n        const numberOfUpdates = updates.length\n\n        if ( numberOfIds !== numberOfUpdates ) {\n            TAbstractDataController.returnError( 'Number of ids doesn\\'t match the number of updates. Abort updates !', response )\n            return\n        }\n\n        const _datas      = []\n        const _errors     = []\n        let numberOfDatas = numberOfIds\n        let id            = null\n        let update        = null\n        let updateKeys    = null\n        let updateValues  = null\n        let counter       = null\n        let settings      = null\n        let query         = null\n        let dataToSend    = null\n\n        for ( let index = 0 ; index < numberOfUpdates ; index++ ) {\n\n            id           = ids[ index ]\n            update       = updates[ index ]\n            updateKeys   = Object.keys( update )\n            updateValues = Object.values( update )\n            counter      = 1\n            settings     = ''\n            for ( let key in updateKeys ) {\n                counter++\n                settings += `${key}=$${counter}, `\n            }\n            settings = settings.slice( 0, -2 )\n            settings += ')'\n\n            query      = ` UPDATE ${this._tableName} SET ${settings} WHERE id=$1 `\n            dataToSend = [ id ].concat( updateValues )\n\n            this._driver\n                .one( query, dataToSend )\n                .then( data => {\n                    _datas.push( data )\n                } )\n                .catch( error => {\n                    _errors.push( error )\n                } )\n                .finally( () => {\n\n                    numberOfDatas--\n                    if ( numberOfDatas > 0 ) { return }\n\n                    const haveData  = ( _datas.length > 0 )\n                    const haveError = ( _errors.length > 0 )\n\n                    if ( haveData && haveError ) {\n\n                        TAbstractDataController.returnErrorAndData( _errors, _datas, response )\n\n                    } else if ( !haveData && haveError ) {\n\n                        TAbstractDataController.returnError( _errors, response )\n\n                    } else if ( haveData && !haveError ) {\n\n                        TAbstractDataController.returnData( _datas, response )\n\n                    } else if ( !haveData && !haveError ) {\n\n                        TAbstractDataController.returnData( null, response )\n\n                    }\n\n                } )\n\n        }\n\n    }\n\n    _updateOne ( id, update, response ) {\n        super._updateOne( id, update, response )\n\n        const dataKeys   = Object.keys( update )\n        const dataValues = Object.values( update )\n        let counter      = 1\n        let settings     = ''\n        for ( let key in dataKeys ) {\n            counter++\n            settings += `${key}=$${counter}, `\n        }\n        settings = settings.slice( 0, -2 )\n        settings += ')'\n\n        let query   = ` UPDATE ${this._tableName} SET ${settings} WHERE id=$1 `\n        let updates = [ id ].concat( dataValues )\n\n        this._driver\n            .one( query, updates )\n            .then( data => {\n                TAbstractDataController.returnData( data, response )\n            } )\n            .catch( error => {\n                TAbstractDataController.returnError( error, response )\n            } )\n\n    }\n\n    _updateWhere ( query, update, response ) {\n        super._updateWhere( query, update, response )\n\n        TAbstractDataController.returnError( 'UpdateWhere method is not implemented yet ! Sorry for the disagrement.', response )\n\n    }\n\n    /// UTILS\n\n}\n\nexport { TPostgreSQLController }\n"],"names":[],"mappings":"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"}